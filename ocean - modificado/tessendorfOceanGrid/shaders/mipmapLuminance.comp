#version 430
layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

uniform int destMipLevel = 0;
layout(binding = 1, rgba32f) writeonly uniform image2D imageUnit;

uniform sampler2D tex;

void main()
{
	int srcMipLevel = destMipLevel - 1;
	ivec2 dstPos = ivec2(gl_GlobalInvocationID);
	ivec2 srcPos = dstPos * 2;
	vec2 srcColor0 = texelFetch(tex, srcPos + ivec2(0, 0), srcMipLevel).rg;
	vec2 srcColor1 = texelFetch(tex, srcPos + ivec2(1, 0), srcMipLevel).rg;
	vec2 srcColor2 = texelFetch(tex, srcPos + ivec2(0, 1), srcMipLevel).rg;
	vec2 srcColor3 = texelFetch(tex, srcPos + ivec2(1, 1), srcMipLevel).rg;
	
	float maxLum, minLum;
	
	maxLum = max(max(srcColor0.r, srcColor1.r), max(srcColor2.r, srcColor3.r));
	
	if (srcMipLevel == 0)
		minLum = min(min(srcColor0.r, srcColor1.r), min(srcColor2.r, srcColor3.r));
	else
		minLum = min(min(srcColor0.g, srcColor1.g), min(srcColor2.g, srcColor3.g));
	
	imageStore(imageUnit, dstPos, vec4(maxLum,minLum,0,0));
}
